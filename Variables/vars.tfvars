# variables.tfvars

aws_region                           = "us-west-2"
cluster_name                         = "my-eks-cluster"
cluster_role_arn                     = "arn:aws:iam::123456789012:role/my-eks-cluster-role"
cluster_version                      = "1.21"
subnet_ids                           = ["subnet-abc12345", "subnet-def67890"]
security_group_ids                   = ["sg-abc12345", "sg-def67890"]
sns_topic_name                       = "my-sns-topic"
sqs_queue_name                       = "my-sqs-queue"
dynamodb_table_name                  = "my-dynamodb-table"
aurora_cluster_identifier            = "my-aurora-cluster"
aurora_engine                        = "aurora-postgresql"
aurora_engine_version                = "10.12"
aurora_database_name                 = "my-aurora-database"
aurora_master_username               = "admin"
aurora_master_password               = "password"
aurora_port                          = 5432
aurora_security_group_ids            = ["sg-abc12345", "sg-def67890"]
aurora_subnet_group_name             = "my-aurora-subnet-group"
lambda_function_name                 = "my-lambda-function"
lambda_runtime                       = "nodejs14.x"
lambda_handler                       = "index.handler"
lambda_role_arn                      = "arn:aws:iam::123456789012:role/my-lambda-role"
lambda_timeout                       = 10
step_functions_state_machine_name    = "my-step-functions-state-machine"
step_functions_role_arn              = "arn:aws:iam::123456789012:role/my-step-functions-role"
ecs_cluster_name                     = "my-ecs-cluster"
ec2_ami                              = "ami-abc12345"
ec2_instance_type                    = "t2.micro"
fargate_service_name                 = "my-fargate-service"
fargate_task_definition_arn          = "arn:aws:ecs:us-west-2:123456789012:task-definition/my-fargate-task"
fargate_desired_count                = 1
rds_postgresql_identifier            = "my-rds-postgresql"
rds_postgresql_engine_version        = "12.7"
rds_postgresql_instance_class        = "db.t3.micro"
rds_postgresql_username              = "admin"
rds_postgresql_password              = "password"
rds_postgresql_allocated_storage     = 20
rds_postgresql_storage_type          = "gp2"
rds_postgresql_multi_az              = false
rds_postgresql_publicly_accessible   = false
rds_postgresql_security_group_ids    = ["sg-abc12345", "sg-def67890"]
rds_postgresql_subnet_group_name     = "my-rds-postgresql-subnet-group"
rds_postgresql_parameter_group_name  = "my-rds-postgresql-parameter-group"
rds_postgresql_backup_retention_period = 7
rds_postgresql_skip_final_snapshot   = true
rds_postgresql_deletion_protection   = false
tags                                 = {
  environment = "dev"
  project     = "my-project"
}
